trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'conteinerimagens'
  imageRepository: 'usuarioapi'
  containerRegistry: 'imagensapigabriel.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: 'latest'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Compila e Armazena Imagem
  jobs:
  - job: Build
    displayName: Compila Projeto
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      displayName: ExecutaTestes
      inputs:
        command: 'test'
        projects: '**/UsuarioAPI.Login.testes.csproj'

    # Add a new step to check test results and stop the pipeline if any test fails
    - powershell: |
        $testResults = Get-ChildItem -Path $(System.DefaultWorkingDirectory) -Recurse -Filter '*.trx'
        $failedTests = $testResults | ForEach-Object {
            Write-Host "Analyzing $($_.FullName)"
            $testResult = Publish-TestResults -TestRunner VSTest -TestResultsFiles $_.FullName
            if ($testResult.FailedCount -gt 0) {
                Write-Host "Erro nos Testes . Parar a pipeline."
                exit 1
            }
        }
      displayName: 'Check Test Results'
    - task: Docker@2
      displayName: Compila e Armazena a imagem para o Conteiner registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)